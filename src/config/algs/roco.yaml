# --- ROCO specific parameters ---

# use epsilon greedy action/role selector
action_selector: "soft_epsilon_greedy"
action_encoder: "obs_reward"
epsilon_start: 1.0
epsilon_finish: 0.05
role_epsilon_finish: 0.05
epsilon_anneal_time: 70000
epsilon_anneal_time_exp: 70000

runner: "roleEpisode"
# batch_size_run: 1 
buffer_size: 5000


# update the target network every {} episodes
target_update_interval: 200

t_max: 3005000

# use the Q_Learner to train
agent_output_type: "q"
learner: "roco_learner"
double_q: True
mixer: "qmix"
role_mixer: "qmix"
mixing_embed_dim: 32
hypernet_layers: 2
hypernet_embed: 64


mac: "roco_mac"
agent: "roco"
role: 'dot'
role_selector: 'dot'
bi_opt: False

n_role_clusters: 5
role_interval: 5
state_latent_dim: 32
action_latent_dim: 20
role_action_spaces_update_start: 50000

latent_dim: 8
attention_dim: 32
nn_hidden_size: 64
mi_loss_weight: 0.001
entropy_loss_weight: 0.01
msg_l1_reg_loss_weight: 0
var_floor: 0.002
log_weights: True

# for interpretability
verbose: False

name: "roco"